from pybricks.hubs import PrimeHub
from pybricks.pupdevices import Motor, ColorSensor, UltrasonicSensor, ForceSensor
from pybricks.parameters import Button, Color, Direction, Port, Side, Stop
from pybricks.robotics import DriveBase
from pybricks.tools import wait, StopWatch

tempo = StopWatch()   
hub = PrimeHub()
direito = Motor(Port.A)
esquerdo = Motor(Port.F, Direction.COUNTERCLOCKWISE)
garra_esq = Motor(Port.D, Direction.COUNTERCLOCKWISE)
garra_dir = Motor(Port.C, Direction.COUNTERCLOCKWISE)
mover = DriveBase(esquerdo, direito, 54, 76)
mover.use_gyro(True)
numero = 1
lancamento = 1
hub.system.set_stop_button(Button.BLUETOOTH)

def andar(distancia, velocidade = 300):
    mover.settings(velocidade, 900, 230, 300)
    mover.straight(distancia*10)

def curva(graus, velocidade = 300):
    mover.settings(300, 230, velocidade, 130)
    mover.turn(graus)
    
def garraD(velocidade, tempo):
    garra_dir.run_time(velocidade, tempo)

def garraE(velocidade, tempo):
    garra_esq.run_time(velocidade, tempo)

def arco(raio, graus):
    mover.curve(raio, graus)

def esperar(tempo):
    mover.stop()
    wait(tempo*1000)
    mover.stop()

while numero == 1:

    hub.display.number(lancamento)
    botao = hub.buttons.pressed()
    
    if Button.LEFT in botao: 

        if lancamento == 0:

            lancamamento = 0
            hub.display.number(lancamento)

        else:

            lancamento -= 1
            hub.display.number(lancamento)
            wait(250)
    
    if Button.RIGHT in botao:

        if lancamento == 99:

            lancamento = 99

        else:

            lancamento += 1
            hub.display.number(lancamento)
            wait(250)

    if Button.CENTER in botao:
        
        wait(300)

        if lancamento == 0:

            mover.drive(1000, 0)

        if lancamento == 1:

            andar(15)
            curva(199)
            andar(-40.5)
            mover.curve(-72, -190)
            garraD(7000, 2000)
            andar(-70)
            mover.stop()

        if lancamento == 2:

            andar(63)
            mover.curve(200, -45)
            mover.curve(-270, 48)
            andar(12.7)
            curva(-90)
            andar(-49) 
            andar(10)
            curva(-88)
            andar(-3.1)
            garraE(-4000, 2000)
            andar(-3)
            garraE(4000, 2000)
            mover.curve(100, 115)
            garraE(-4000, 2000)
            arco(115, -105)
            garraE(4500, 3300)
            arco(-200 -20)
            garraE(-4500, 1500)
            arco(500, -42) 
            andar(12)
            garra(4000, 1300)
            

            
            mover.stop()


        if  lancamento == 3:

#
             arco(-480, 38)
             arco(-140, -60)
             arco(-120, 55)
             arco (-80, -82)
             andar(-12)
             arco(120, -50)
             andar(60)
             mover.stop()


        if lancamento == 4:

            arco(210, -45)
            andar(43.5)
            andar(-20)
            garraD(4000, 1900)
            arco(145, 87)
            andar(6)
            garraD(-4000, 1600)
            curva(38)
            garraD(4000, 1749)
            andar(-13)
            garraD(-4000, 1999)
            arco(140, -45)
            arco(300, 35)
            garraD(4000, 1500)
            andar(-8)

            mover.stop()
            
        if lancamento == 5:


            andar(12.5)
            mover.curve(200, 90)
            andar(90)
            curva(-110)
            curva(130)
            andar(40)
            mover.stop()

        if lancamento == 6:

            wait(100)
            

from pybricks.hubs import PrimeHub
from pybricks.pupdevices import Motor, ColorSensor, UltrasonicSensor, ForceSensor
from pybricks.parameters import Button, Color, Direction, Port, Side, Stop
from pybricks.robotics import DriveBase
from pybricks.tools import wait, StopWatch

tempo = StopWatch()
hub = PrimeHub()
direito = Motor(Port.A)
esquerdo = Motor(Port.F, Direction.COUNTERCLOCKWISE)
garra_esq = Motor(Port.D, Direction.COUNTERCLOCKWISE)
garra_dir = Motor(Port.C)
mover = DriveBase(esquerdo, direito, 54, 76)
mover.use_gyro(True)
numero = 1
lancamento = 1
hub.system.set_stop_button(Button.BLUETOOTH)

def andar(distancia, velocidade = 300):
    mover.settings(velocidade, 900, 230, 300)
    mover.straight(distancia*10)

def curva(graus):
    mover.settings(50, 600, 130, 200)
    mover.turn(graus)
    
def garraD(velocidade, tempo):
    garra_dir.run_time(velocidade, tempo)

def garraE(velocidade, tempo):
    garra_esq.run_time(velocidade, tempo)
    
def esperar(tempo):
    mover.stop()
    wait(tempo*1000)
    mover.stop()

while numero == 1:

    hub.display.number(lancamento)
    botao = hub.buttons.pressed()
    
    if Button.LEFT in botao: 

        if lancamento == -99:

            lancamamento = -99
            hub.display.number(lancamento)

        else:

            lancamento -= 1
            hub.display.number(lancamento)
            wait(250)
    
    if Button.RIGHT in botao:

        if lancamento == 99:

            lancamento = 99

        else:

            lancamento += 1
            hub.display.number(lancamento)
            wait(250)

    if Button.CENTER in botao:
        
        wait(300)

        if lancamento == -4:
            
            andar(-39)
            curva(-49)
            andar(-45)
            curva(30)
            andar(70)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == -3:

            curva(10)
            garraE(-4000, 1600)
            garraE(350, 1085)
            andar(46)
            curva(-56)
            andar(19)
            garraE(350, 1070)
            garraE(-4000, 250)
            curva(190)
            andar(14)
            curva(-115)
            garraE(-4000, 600)
            andar(15)
            garraE(-4000, 650)
            andar(-68)
            curva(-45)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == -2:


            #calibrado
            andar(65)
            curva(-38)
            andar(15)
            #fim da missão do tubarão
            andar(-24)
            curva(-35)
            andar(8)
            curva(-107)
            andar(-42)
            mover.stop()
            andar(11)
            curva(-93)
            andar(-6)
            garraE(-4000, 1535)
            garraE(4000, 1550)
            curva(93)
            andar(80, 900)
            print('Bateria:', hub.battery.voltage())
            mover.stop()
        
        if lancamento == -1:
            
            andar(-64)
            curva(-88)
            andar(-12)
            curva(-93)
            andar(-72)
            



            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 0:

            mover.use_gyro(False)
            print('Bateria:', hub.battery.voltage())
            andar(10000)

        if lancamento == 1:

            andar(-10)
            curva(-30)
            andar(-30)
            curva(35)
            andar(-17)
            curva(-34)
            andar(-15)
            curva(90)
            andar(-14.5)
            curva(-180)
            andar(-15)
            curva(-80)
            andar(-60)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 2:

            garraE(4000, 1500)
            curva(-35)
            andar(54, 200)
            andar(-6, 200)
            curva(74)
            garraD(4000, 550)
            andar(16.4)
            garraD(700, 1600)
            curva(45)
            garraD(-700, 700)
            curva(-80)
            andar(13)
            curva(86)
            andar(4)
            garraE(-3000, 2000)
            andar(-8)
            curva(75)
            andar(57)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 3:

            andar(72)
            garraE(-3000,900)
            curva(-100)
            andar(42)
            andar(-7)
            curva(55)
            andar(15)
            garraD(-3000, 3000)
            andar(9)
            garraD(3000, 3500)
            andar(-6)
            curva(-180)
            andar(15)
            curva(-130)
            andar(30)
            curva(90)
            andar(64)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

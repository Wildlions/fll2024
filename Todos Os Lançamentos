from pybricks.hubs import PrimeHub
from pybricks.pupdevices import Motor, ColorSensor, UltrasonicSensor, ForceSensor
from pybricks.parameters import Button, Color, Direction, Port, Side, Stop
from pybricks.robotics import DriveBase
from pybricks.tools import wait, StopWatch, multitask, run_task

tempo = StopWatch()
hub = PrimeHub()
direito = Motor(Port.A)
esquerdo = Motor(Port.F, Direction.COUNTERCLOCKWISE)
garra_esq = Motor(Port.D, Direction.COUNTERCLOCKWISE)
garra_dir = Motor(Port.C)
mover = DriveBase(esquerdo, direito, 54, 76)
mover.use_gyro(True)
numero = 1
numero2 = 0
lancamento = 1
hub.system.set_stop_button(Button.BLUETOOTH)
sensoresq = ColorSensor(Port.B)
sensordir = ColorSensor(Port.E)
Coresq = sensoresq.color()
Cordir = sensordir.color()

def andar(distancia, velocidade = 350):
    mover.settings(velocidade, 900, 230, 300)
    mover.straight(distancia*10)

def curva(graus, velocidade = 200):
    mover.settings(50, 600, 130, velocidade)
    mover.turn(graus)

    
def garraD(velocidade, tempo):
    garra_dir.run_time(velocidade, tempo)

def garraE(velocidade, tempo):
    garra_esq.run_time(velocidade, tempo)
    
def esperar(tempo):
    mover.stop()
    wait(tempo*1000)
    mover.stop()

def bússola():

    numero2 = 1

    while numero2 == 1:

        Cordir = sensordir.color()

        if Cordir == Color.WHITE:

            numero2 = 0

        else:

            andar(1)

def task1(distancia):

    andar(distancia, velocidade=300)

def task2(graus):

    curva(graus)

while numero == 1:

    hub.display.number(lancamento)
    botao = hub.buttons.pressed()
    
    if Button.LEFT in botao: 

        if lancamento == -99:

            lancamamento = -99
            hub.display.number(lancamento)

        else:

            lancamento -= 1
            hub.display.number(lancamento)
            wait(250)
    
    if Button.RIGHT in botao:

        if lancamento == 99:

            lancamento = 99

        else:

            lancamento += 1
            hub.display.number(lancamento)
            wait(250)

    if Button.CENTER in botao:
        
        wait(300)

        if lancamento == -4:

            curva(46)
            andar(-70, 910)
            andar(10, 150)
            curva(-30)
            andar(8)
            curva(-110)
            andar(-50)
            curva(10)
            andar(10,1000)
            curva(180, 900)
            andar(45, 900)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == -3:
            
            #calibrado
            andar(69)
            curva(-42)
            andar(15)
            #fim da missão do tubarão
            andar(-23.5)
            curva(-40)
            andar(8, 70)
            curva(-15, 100)
            andar(-4)
            curva(-90)
            andar(-60)
            andar(10)
            curva(-73) 
            andar(-9.5)
            garraE(-4000, 1300)
            curva(-5)
            andar(4)
            garraE(-4000, 900)
            curva(-10)
            garraE(4000, 1000)
            andar(-5)
            curva(75)
            andar(33.5)
            garraE(-4000, 900)
            curva(-63)
            andar(14)
            mover.stop()
            andar(-4.5)
            garraE(400, 3000)
            garraE(-500, 2000)
            curva(-60, 900)
            andar(-7000   , 900)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == -2:

            andar(-58, 400)
            andar(64, 400)
            print('Bateria:', hub.battery.voltage())
            mover.stop()
        
        if lancamento == -1:
            
            andar(-65, 400)
            curva(-40)
            andar(-3, 400)
            curva(40)
            andar(70, 400)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 0:

            mover.use_gyro(False)
            print('Bateria:', hub.battery.voltage())
            andar(10000)
        
        if lancamento == 1:
            curva(-5)
            andar(52)
            curva(-4)
            andar(60)
            andar(-15, 500)
            curva(-28)
            andar(17, 900)
            curva(35, 500)
            andar(27, 900)
            curva(40, 900)
            andar(50, 900)
            
            
            print('Bateria:', hub.battery.voltage())
            mover.stop()
            
        if lancamento == 2:

            andar(-10, 600)
            curva(-30, 350)
            andar(-30, 600)
            curva(45, 350)
            andar(-17, 600)
            curva(-34, 350)
            andar(-15, 600)
            curva(73, 350)
            andar(-18, 600)
            andar(21, 900)
            curva(-75, 350)
            andar(70, 900)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 3:

            garraE(4000, 1500)
            curva(-35)
            andar(54, 900)
            andar(-6, 900)
            curva(74)
            garraD(4000, 550)
            andar(19,550)
            garraD(700, 1600)
            curva(45)
            garraD(-700, 700)
            curva(-80)
            andar(15, 500)
            curva(86)
            andar(7)
            garraE(-1500, 1500)
            andar(-10, 900)
            curva(75)
            andar(57, 900)
            print('Bateria:', hub.battery.voltage())
            mover.stop()

        if lancamento == 4: #missao nova do polvo

            curva(-55)
            andar(68, 900)
            curva(43, 250)
            andar(15, 900)
            andar(-14.1, 900)
            curva(-32)
            andar(33.8, 900)
            curva(55)
            andar(7)
            bússola()
            andar(3.4)
            garraD(4000, 1010)
            andar(2)
            wait(3000)
            andar(-11, 900)
            curva(-130, 900)
            andar(-35, 900)
            curva(-70, 900)
            andar(-25, 900)
            garraD(4000, 1800)
            mover.stop()
            andar(15)
            curva(-44)
            andar(26)
            curva(-135)
            andar(25)
            mover.stop()
            andar(-2)
            garraE(-3000, 2000)
            garraE(3000, 750)
            andar(-10)
            curva(-40)
            andar(-26)
            curva(40)
            andar(-75)
            print('Bateria:', hub.battery.voltage())
            mover.stop()


        if lancamento == 5:
            
            curva(-7)
            andar(75)
            curva(52)
            andar(17.1)
            garraD(4000, 2500)
            garraD(-4000, 2500)
            andar(-18, 700)
            curva(-40)
            andar(-82, 900)


        if lancamento == 6:

            andar(70)
            curva(28)
            andar(13, 100)
